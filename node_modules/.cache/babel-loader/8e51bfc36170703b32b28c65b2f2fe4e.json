{"ast":null,"code":"var _jsxFileName = \"/home/maher/Desktop/My-React-Projects/favid-list/favid-list-project/src/components/AllVideos.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport LeftSidebar from './LeftSidebar';\nimport Video from './Video';\nimport db from '../firebaseConfig';\n\nfunction AllVideos(props) {\n  const [videos, setVideos] = React.useState([]);\n\n  const fetchData = async () => {\n    const res = await db.collection('YouTube').get();\n    const data = res.docs.map((video, index) => Object.assign(video.data(), {\n      id_on_firebase: video.id\n    }));\n    setVideos(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"videos-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LeftSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"videosContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, videos.map(video => {\n    if (!video.isArchived) {\n      return /*#__PURE__*/React.createElement(Video, {\n        videoDetails: video,\n        update: fetchData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 27\n        }\n      });\n    }\n  }))));\n}\n\nexport default AllVideos;","map":{"version":3,"sources":["/home/maher/Desktop/My-React-Projects/favid-list/favid-list-project/src/components/AllVideos.js"],"names":["React","useState","useEffect","LeftSidebar","Video","db","AllVideos","props","videos","setVideos","fetchData","res","collection","get","data","docs","map","video","index","Object","assign","id_on_firebase","id","isArchived"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,EAAP,MAAe,mBAAf;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAExB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;;AAEA,QAAMS,SAAS,GAAG,YAAY;AAC5B,UAAMC,GAAG,GAAG,MAAMN,EAAE,CAACO,UAAH,CAAc,SAAd,EAAyBC,GAAzB,EAAlB;AACA,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAJ,CAASC,GAAT,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAiBC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACH,IAAN,EAAd,EAA4B;AAACO,MAAAA,cAAc,EAAEJ,KAAK,CAACK;AAAvB,KAA5B,CAA9B,CAAb;AACAb,IAAAA,SAAS,CAACK,IAAD,CAAT;AACD,GAJD;;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEF,MAAM,CAACQ,GAAP,CAAYC,KAAK,IAAI;AACnB,QAAG,CAACA,KAAK,CAACM,UAAV,EAAsB;AACnB,0BAAO,oBAAC,KAAD;AAAO,QAAA,YAAY,EAAEN,KAArB;AAA4B,QAAA,MAAM,EAAEP,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;AACF,GAJD,CAHF,CADJ,CAFJ,CADF;AAiBD;;AAED,eAAeJ,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport LeftSidebar from './LeftSidebar'\nimport Video from './Video'\nimport db from '../firebaseConfig';\n\n\n\nfunction AllVideos(props) {\n\n  const [videos, setVideos] = React.useState([]);\n\n  const fetchData = async () => {\n    const res = await db.collection('YouTube').get();\n    const data = res.docs.map((video, index)=> Object.assign(video.data(), {id_on_firebase: video.id}));\n    setVideos(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  \n\n  return (\n    <div id=\"videos-container\">\n        <LeftSidebar />\n        <div id=\"right-side\">\n            <div id=\"videosContainer\">\n\n            {\n              videos.map( video => {\n                if(!video.isArchived) {\n                   return <Video videoDetails={video} update={fetchData}/>\n                }\n              })\n            }\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default AllVideos;\n"]},"metadata":{},"sourceType":"module"}