{"ast":null,"code":"var _jsxFileName = \"/home/maher/Desktop/My-React-Projects/favid-list/favid-list-project/src/components/AllVideos.js\";\nimport React from 'react';\nimport './index.css';\nimport LeftSidebar from './LeftSidebar';\nimport Video from './Video';\nimport db from './firebaseConfig';\nconst {\n  forwardRef,\n  useRef,\n  useImperativeHandle\n} = React;\n\nconst AllVideos = props => {\n  const [videos, setVideos] = React.useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await db.collection('YouTube').get();\n      const data = res.docs.map((video, index) => Object.assign(video.data(), {\n        id_on_firebase: video.id\n      }));\n      setVideos(data);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"videos-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LeftSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"videosContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, videos.map(video => {\n    if (!video.isArchived) {\n      return /*#__PURE__*/React.createElement(Video, {\n        videoDetails: video,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }\n      });\n    }\n  }))));\n};\n\nexport default AllVideos;","map":{"version":3,"sources":["/home/maher/Desktop/My-React-Projects/favid-list/favid-list-project/src/components/AllVideos.js"],"names":["React","LeftSidebar","Video","db","forwardRef","useRef","useImperativeHandle","AllVideos","props","videos","setVideos","useState","useEffect","fetchData","res","collection","get","data","docs","map","video","index","Object","assign","id_on_firebase","id","isArchived"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAM;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA;AAAtB,IAA8CN,KAApD;;AAIA,MAAMO,SAAS,GAAIC,KAAD,IAAW;AAE3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMX,EAAE,CAACY,UAAH,CAAc,SAAd,EAAyBC,GAAzB,EAAlB;AACA,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAJ,CAASC,GAAT,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAiBC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACH,IAAN,EAAd,EAA4B;AAACO,QAAAA,cAAc,EAAEJ,KAAK,CAACK;AAAvB,OAA5B,CAA9B,CAAb;AACAf,MAAAA,SAAS,CAACO,IAAD,CAAT;AACD,KAJD;;AAKAJ,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEJ,MAAM,CAACU,GAAP,CAAYC,KAAK,IAAI;AACnB,QAAG,CAACA,KAAK,CAACM,UAAV,EAAsB;AACnB,0BAAO,oBAAC,KAAD;AAAO,QAAA,YAAY,EAAEN,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;AACF,GAJD,CAHF,CADJ,CAFJ,CADF;AAiBD,CA9BD;;AAgCA,eAAeb,SAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport LeftSidebar from './LeftSidebar'\nimport Video from './Video'\nimport db from './firebaseConfig';\nconst { forwardRef, useRef, useImperativeHandle } = React;\n\n\n\nconst AllVideos = (props) => {\n\n  const [videos, setVideos] = React.useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await db.collection('YouTube').get();\n      const data = res.docs.map((video, index)=> Object.assign(video.data(), {id_on_firebase: video.id}));\n      setVideos(data);\n    };\n    fetchData();\n  }, []); \n\n  return (\n    <div id=\"videos-container\">\n        <LeftSidebar />\n        <div id=\"right-side\">\n            <div id=\"videosContainer\">\n\n            {\n              videos.map( video => {\n                if(!video.isArchived) {\n                   return <Video videoDetails={video} />\n                }\n              })\n            }\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default AllVideos;\n"]},"metadata":{},"sourceType":"module"}