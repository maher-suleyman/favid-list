{"ast":null,"code":"var _jsxFileName = \"/home/maher/Desktop/FAVID to github/favid-list-beta/src/components/VideoBoard.js\";\nimport React from 'react';\nimport './index.css';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button } from 'react-bootstrap';\nimport db from '../firebaseConfig';\n\nfunction VideoBoard(props) {\n  const id = props.videoDetails.id;\n  const id_on_firebase = props.videoDetails.id_on_firebase;\n  const id_on_youtube = props.videoDetails.id_on_youtube;\n  const title = props.videoDetails.title;\n  const date = props.videoDetails.date;\n  const [isArchived, setIsArchived] = React.useState(props.videoDetails.isArchived);\n  const [isViewed, setIsViewed] = React.useState(props.videoDetails.isViewed);\n  const [rating, setRating] = React.useState(props.videoDetails.rating);\n\n  function deleteVideo() {\n    db.collection('YouTube').doc(id_on_firebase).delete();\n    props.updateDeletion();\n  }\n\n  function archive() {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      isArchived: true\n    });\n    setIsArchived(!isArchived);\n    props.updateArchived();\n  }\n\n  function unArchive() {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      isArchived: false\n    });\n    setIsArchived(!isArchived);\n    props.updateUnarchived();\n  }\n\n  function setAsViewed() {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      isViewed: true\n    });\n    setIsViewed(!isViewed);\n    props.updateViewed();\n  }\n\n  function setAsUnviewed() {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      isViewed: false\n    });\n    setIsViewed(!isViewed);\n    props.updateUnviewed();\n  }\n\n  function updateRating(newRating) {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      rating: newRating\n    });\n    setRating(newRating);\n    props.updateRating();\n  }\n\n  const iframeSRC = `https://www.youtube.com/embed/${id_on_youtube}`;\n  const videoContainer = {\n    border: '1px solid black',\n    textAlign: 'center',\n    margin: '20px 10px',\n    width: '25%',\n    height: 'auto',\n    paddingBottom: '8px'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: videoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"auto\",\n    src: iframeSRC,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowfullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: '700',\n      marginBottom: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: '700',\n      color: '#1c78c2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, date), /*#__PURE__*/React.createElement(Box, {\n    style: {\n      marginTop: '-10px',\n      marginBottom: '-4px'\n    },\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Rating, {\n    name: `simple-controlled${id}`,\n    value: rating,\n    onChange: (event, newRating) => {\n      updateRating(newRating);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: deleteVideo,\n    variant: \"danger\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Delete\"), !isArchived && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: archive,\n    variant: \"secondary\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Archive\"), isArchived && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: unArchive,\n    variant: \"primary\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Unarchive\"), !isViewed && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: setAsViewed,\n    variant: \"success\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Set as Viewd\"), isViewed && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: setAsUnviewed,\n    variant: \"warning\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Set as Unviewd\"));\n}\n\nexport default VideoBoard;","map":{"version":3,"sources":["/home/maher/Desktop/FAVID to github/favid-list-beta/src/components/VideoBoard.js"],"names":["React","Rating","Typography","Box","Button","db","VideoBoard","props","id","videoDetails","id_on_firebase","id_on_youtube","title","date","isArchived","setIsArchived","useState","isViewed","setIsViewed","rating","setRating","deleteVideo","collection","doc","delete","updateDeletion","archive","update","updateArchived","unArchive","updateUnarchived","setAsViewed","updateViewed","setAsUnviewed","updateUnviewed","updateRating","newRating","iframeSRC","videoContainer","border","textAlign","margin","width","height","paddingBottom","fontWeight","marginBottom","color","marginTop","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button } from 'react-bootstrap';\nimport db from '../firebaseConfig';\n\nfunction VideoBoard(props) {\n  const id = props.videoDetails.id;\n  const id_on_firebase = props.videoDetails.id_on_firebase;\n  const id_on_youtube = props.videoDetails.id_on_youtube;\n  const title = props.videoDetails.title;\n  const date = props.videoDetails.date;\n\n  const [isArchived, setIsArchived] = React.useState(\n    props.videoDetails.isArchived\n  );\n  const [isViewed, setIsViewed] = React.useState(props.videoDetails.isViewed);\n  const [rating, setRating] = React.useState(props.videoDetails.rating);\n\n  function deleteVideo() {\n    db.collection('YouTube').doc(id_on_firebase).delete();\n    props.updateDeletion();\n  }\n\n  function archive() {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      isArchived: true,\n    });\n    setIsArchived(!isArchived);\n    props.updateArchived();\n  }\n\n  function unArchive() {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      isArchived: false,\n    });\n    setIsArchived(!isArchived);\n    props.updateUnarchived();\n  }\n\n  function setAsViewed() {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      isViewed: true,\n    });\n    setIsViewed(!isViewed);\n    props.updateViewed();\n  }\n\n  function setAsUnviewed() {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      isViewed: false,\n    });\n    setIsViewed(!isViewed);\n    props.updateUnviewed();\n  }\n\n  function updateRating(newRating) {\n    db.collection('YouTube').doc(id_on_firebase).update({\n      rating: newRating,\n    });\n    setRating(newRating);\n    props.updateRating();\n  }\n\n  const iframeSRC = `https://www.youtube.com/embed/${id_on_youtube}`;\n\n  const videoContainer = {\n    border: '1px solid black',\n    textAlign: 'center',\n    margin: '20px 10px',\n    width: '25%',\n    height: 'auto',\n    paddingBottom: '8px',\n  };\n\n  return (\n    <div style={videoContainer}>\n      {/* Setting video frame */}\n      <iframe\n        width=\"100%\"\n        height=\"auto\"\n        src={iframeSRC}\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen\n      ></iframe>\n\n      {/* Displaying video title */}\n      <p style={{ fontWeight: '700', marginBottom: '4px' }}>{title}</p>\n\n      {/* Displaying date of video adding */}\n      <p style={{ fontWeight: '700', color: '#1c78c2' }}>{date}</p>\n\n      {/* Displaying video rating with the ability to update the value */}\n      <Box\n        style={{ marginTop: '-10px', marginBottom: '-4px' }}\n        component=\"fieldset\"\n        mb={3}\n        borderColor=\"transparent\"\n      >\n        <Typography component=\"legend\"></Typography>\n        <Rating\n          name={`simple-controlled${id}`}\n          value={rating}\n          onChange={(event, newRating) => {\n            updateRating(newRating);\n          }}\n        />\n      </Box>\n\n      {/* Creating a button to delete the video */}\n      <Button id=\"btn\" onClick={deleteVideo} variant=\"danger\" size=\"sm\">\n        Delete\n      </Button>\n\n      {/* Creating a button to set the video as archived */}\n      {!isArchived && (\n        <Button id=\"btn\" onClick={archive} variant=\"secondary\" size=\"sm\">\n          Archive\n        </Button>\n      )}\n\n      {/* Creating a button to set the video as archived */}\n      {isArchived && (\n        <Button id=\"btn\" onClick={unArchive} variant=\"primary\" size=\"sm\">\n          Unarchive\n        </Button>\n      )}\n\n      {/* Creating a button to set the video as viewed */}\n      {!isViewed && (\n        <Button id=\"btn\" onClick={setAsViewed} variant=\"success\" size=\"sm\">\n          Set as Viewd\n        </Button>\n      )}\n\n      {/* Creating a button to set the video as unviewed */}\n      {isViewed && (\n        <Button id=\"btn\" onClick={setAsUnviewed} variant=\"warning\" size=\"sm\">\n          Set as Unviewd\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default VideoBoard;\n"]},"metadata":{},"sourceType":"module"}