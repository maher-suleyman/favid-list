{"ast":null,"code":"var _jsxFileName = \"/home/maher/Desktop/FAVID to github/favid-list-beta/src/components/VideoBoard.js\";\nimport React from 'react';\nimport './index.css';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button } from 'react-bootstrap';\nimport db from '../firebaseConfig';\n\nfunction VideoBoard(props) {\n  const id = props.videoDetails.id;\n  const id_on_firebase = props.videoDetails.id_on_firebase;\n  const id_on_youtube = props.videoDetails.id_on_youtube;\n  const title = props.videoDetails.title;\n  const date = props.videoDetails.date;\n  const [isArchived, setIsArchived] = React.useState(props.videoDetails.isArchived);\n  const [isViewed, setIsViewed] = React.useState(props.videoDetails.isViewed);\n  const [rating, setRating] = React.useState(props.videoDetails.rating);\n\n  function deleteVideo() {\n    db.collection('YouTube').doc(id_on_firebase).delete();\n    props.updateDeletion();\n  }\n\n  function archive() {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      isArchived: true\n    });\n    setIsArchived(!isArchived);\n    props.updateArchived();\n  }\n\n  function unArchive() {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      isArchived: false\n    });\n    setIsArchived(!isArchived);\n    props.updateUnarchived();\n  }\n\n  function setAsViewed() {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      isViewed: true\n    });\n    setIsViewed(!isViewed);\n    props.updateViewed();\n  }\n\n  function setAsUnviewed() {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      isViewed: false\n    });\n    setIsViewed(!isViewed);\n    props.updateUnviewed();\n  }\n\n  function updateRating(newRating) {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      rating: newRating\n    });\n    setRating(newRating);\n    props.updateRating();\n  }\n\n  const iframeSRC = `https://www.youtube.com/embed/${id_on_youtube}`;\n  const videoContainer = {\n    border: '1px solid black',\n    textAlign: 'center',\n    margin: '20px 10px',\n    width: '25%',\n    height: 'auto',\n    paddingBottom: '8px'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: videoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"auto\",\n    src: iframeSRC,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowfullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: '700',\n      marginBottom: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: '700',\n      color: '#1c78c2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, date), /*#__PURE__*/React.createElement(Box, {\n    style: {\n      marginTop: '-10px',\n      marginBottom: '-4px'\n    },\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Rating, {\n    name: `simple-controlled${id}`,\n    value: rating,\n    onChange: (event, newRating) => {\n      updateRating(newRating);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: deleteVideo,\n    variant: \"danger\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Delete\"), !isArchived && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: archive,\n    variant: \"secondary\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Archive\"), isArchived && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: unArchive,\n    variant: \"primary\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"Unarchive\"), !isViewed && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: setAsViewed,\n    variant: \"success\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Set as Viewd\"), isViewed && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: setAsUnviewed,\n    variant: \"warning\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Set as Unviewd\"));\n}\n\nexport default VideoBoard;","map":{"version":3,"sources":["/home/maher/Desktop/FAVID to github/favid-list-beta/src/components/VideoBoard.js"],"names":["React","Rating","Typography","Box","Button","db","VideoBoard","props","id","videoDetails","id_on_firebase","id_on_youtube","title","date","isArchived","setIsArchived","useState","isViewed","setIsViewed","rating","setRating","deleteVideo","collection","doc","delete","updateDeletion","archive","update","updateArchived","unArchive","updateUnarchived","setAsViewed","updateViewed","setAsUnviewed","updateUnviewed","updateRating","newRating","iframeSRC","videoContainer","border","textAlign","margin","width","height","paddingBottom","fontWeight","marginBottom","color","marginTop","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button } from 'react-bootstrap';\nimport db from '../firebaseConfig';\n\n\n\nfunction VideoBoard(props) {\n\n    const id = props.videoDetails.id;\n    const id_on_firebase = props.videoDetails.id_on_firebase;\n    const id_on_youtube = props.videoDetails.id_on_youtube;\n    const title = props.videoDetails.title;\n    const date = props.videoDetails.date;\n    \n    const [isArchived, setIsArchived] = React.useState(props.videoDetails.isArchived);\n    const [isViewed, setIsViewed] = React.useState(props.videoDetails.isViewed);\n    const [rating, setRating] = React.useState(props.videoDetails.rating);\n    \n    function deleteVideo() {\n        db.collection('YouTube').doc(id_on_firebase).delete();\n        props.updateDeletion();\n    }\n\n    function archive() {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            isArchived: true\n        });\n        setIsArchived(!isArchived);\n        props.updateArchived();\n    }\n\n    function unArchive() {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            isArchived: false\n        });\n        setIsArchived(!isArchived);\n        props.updateUnarchived();\n    }\n\n    function setAsViewed() {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            isViewed: true\n        });\n        setIsViewed(!isViewed);\n        props.updateViewed();\n    }\n\n    function setAsUnviewed() {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            isViewed: false\n        });\n        setIsViewed(!isViewed);\n        props.updateUnviewed();\n    }\n\n    function updateRating(newRating) {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            rating: newRating\n        });\n        setRating(newRating);\n        props.updateRating();\n    }\n\n    const iframeSRC = `https://www.youtube.com/embed/${id_on_youtube}`\n\n    const videoContainer= {\n        border: '1px solid black',\n        textAlign: 'center',\n        margin: '20px 10px',\n        width: '25%',\n        height: 'auto',\n        paddingBottom: '8px'\n    }\n\n\n    return (\n        <div style={videoContainer}>\n            {/* Setting video frame */}\n            <iframe width=\"100%\" height=\"auto\" src={iframeSRC} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            \n            {/* Displaying video title */}\n            <p style={{fontWeight: '700', marginBottom: '4px'}}>{title}</p>\n            \n            {/* Displaying date of video adding */}\n            <p style={{fontWeight: '700', color: '#1c78c2'}}>{date}</p>\n\n            {/* Displaying video rating with the ability to update the value */}\n            <Box style={{marginTop: '-10px', marginBottom: '-4px'}} component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                <Typography component=\"legend\"></Typography>\n                <Rating\n                name={`simple-controlled${id}`}\n                value={rating}\n                onChange={(event, newRating) => {\n                    updateRating(newRating);\n                }}\n                />\n            </Box>\n\n            {/* Creating a button to delete the video */}\n            <Button id=\"btn\" onClick={deleteVideo} variant=\"danger\" size=\"sm\">Delete</Button>\n            \n            {/* Creating a button to set the video as archived */}\n            {\n              !isArchived && (\n                <Button id=\"btn\" onClick={archive} variant=\"secondary\" size=\"sm\">Archive</Button>\n              )\n            }\n\n            {/* Creating a button to set the video as archived */}\n            {\n              isArchived && (\n                <Button id=\"btn\" onClick={unArchive} variant=\"primary\" size=\"sm\">Unarchive</Button>\n              )\n            }\n            \n            {/* Creating a button to set the video as viewed */}\n            {\n              !isViewed && (\n                <Button id=\"btn\" onClick={setAsViewed} variant=\"success\" size=\"sm\">Set as Viewd</Button>\n              )\n            }\n\n            {/* Creating a button to set the video as unviewed */}\n            {\n              isViewed && (\n                <Button id=\"btn\" onClick={setAsUnviewed} variant=\"warning\" size=\"sm\">Set as Unviewd</Button>\n              )\n            }\n            \n        </div>\n        \n    );\n}\n\nexport default VideoBoard;"]},"metadata":{},"sourceType":"module"}