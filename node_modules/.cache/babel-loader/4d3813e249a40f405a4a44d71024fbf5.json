{"ast":null,"code":"var _jsxFileName = \"/home/maher/Desktop/My-React-Projects/favid-list/favid-list-project/src/components/Video.js\";\nimport React from 'react';\nimport './index.css';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button, Navbar, Nav, NavDropdown, Form, FormControl, Brand, Toggle, NavItem } from 'react-bootstrap';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport star from '../images/star.png';\nimport db from '../firebaseConfig';\n\nfunction Video({\n  props,\n  test\n}) {\n  const [id_on_firebase, setId_on_firebase] = React.useState(props.videoDetails.id_on_firebase);\n  const [id_on_youtube, setId_on_youtube] = React.useState(props.videoDetails.id_on_youtube);\n  const [id, setId] = React.useState(props.videoDetails.id);\n  const [isArchived, setIsArchived] = React.useState(props.videoDetails.isArchived);\n  const [isViewed, setIsViewed] = React.useState(props.videoDetails.isViewed);\n  const [rating, setRating] = React.useState(props.videoDetails.rating);\n  const [title, setTitle] = React.useState(props.videoDetails.title);\n  const [date, setDate] = React.useState(props.videoDetails.date);\n\n  function deleteVideo() {\n    db.collection('YouTube').doc(id_on_firebase).delete();\n  }\n\n  function archive() {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      isArchived: true\n    });\n    setIsArchived(!isArchived);\n    test();\n  }\n\n  function unArchive() {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      isArchived: false\n    });\n    setIsArchived(!isArchived);\n  }\n\n  function viewed() {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      isViewed: true\n    });\n    setIsViewed(!isViewed);\n  }\n\n  function unViewed() {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      isViewed: false\n    });\n    setIsViewed(!isViewed);\n  }\n\n  function updateRating(newRating) {\n    db.collection(\"YouTube\").doc(id_on_firebase).update({\n      rating: newRating\n    });\n    setRating(newRating);\n  }\n\n  const iframeSRC = `https://www.youtube.com/embed/${id_on_youtube}`;\n  const videoContainer = {\n    border: '1px solid black',\n    textAlign: 'center',\n    margin: '20px 10px',\n    width: '25%',\n    height: 'auto',\n    paddingBottom: '8px'\n  };\n  const elementStyle = {\n    marginBottom: '-4px'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: videoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"auto\",\n    src: iframeSRC,\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowfullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: elementStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    style: elementStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, date), /*#__PURE__*/React.createElement(Box, {\n    style: {\n      marginTop: '10px',\n      marginBottom: '-8px'\n    },\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Rating, {\n    name: `simple-controlled${id}`,\n    value: rating,\n    onChange: (event, newRating) => {\n      updateRating(newRating);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: deleteVideo,\n    style: elementStyle,\n    variant: \"danger\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Delete\"), !isArchived && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: archive,\n    style: elementStyle,\n    variant: \"secondary\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Archive\"), isArchived && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: unArchive,\n    style: elementStyle,\n    variant: \"primary\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Unarchive\"), !isViewed && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: viewed,\n    style: elementStyle,\n    variant: \"success\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Set as Viewd\"), isViewed && /*#__PURE__*/React.createElement(Button, {\n    id: \"btn\",\n    onClick: unViewed,\n    style: elementStyle,\n    variant: \"warning\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Set as Unviewd\"));\n}\n\nexport default Video;","map":{"version":3,"sources":["/home/maher/Desktop/My-React-Projects/favid-list/favid-list-project/src/components/Video.js"],"names":["React","Rating","Typography","Box","Button","Navbar","Nav","NavDropdown","Form","FormControl","Brand","Toggle","NavItem","Switch","Route","BrowserRouter","Router","star","db","Video","props","test","id_on_firebase","setId_on_firebase","useState","videoDetails","id_on_youtube","setId_on_youtube","id","setId","isArchived","setIsArchived","isViewed","setIsViewed","rating","setRating","title","setTitle","date","setDate","deleteVideo","collection","doc","delete","archive","update","unArchive","viewed","unViewed","updateRating","newRating","iframeSRC","videoContainer","border","textAlign","margin","width","height","paddingBottom","elementStyle","marginBottom","marginTop","event"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,GAAzB,EAA8BC,WAA9B,EAA2CC,IAA3C,EAAiDC,WAAjD,EAA8DC,KAA9D,EAAqEC,MAArE,EAA6EC,OAA7E,QAA4F,iBAA5F;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAa,IAAIC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,EAAP,MAAe,mBAAf;;AAIA,SAASC,KAAT,CAAe;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAf,EAA8B;AAE1B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCvB,KAAK,CAACwB,QAAN,CAAeJ,KAAK,CAACK,YAAN,CAAmBH,cAAlC,CAA5C;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoC3B,KAAK,CAACwB,QAAN,CAAeJ,KAAK,CAACK,YAAN,CAAmBC,aAAlC,CAA1C;AACA,QAAM,CAACE,EAAD,EAAKC,KAAL,IAAc7B,KAAK,CAACwB,QAAN,CAAeJ,KAAK,CAACK,YAAN,CAAmBG,EAAlC,CAApB;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8B/B,KAAK,CAACwB,QAAN,CAAeJ,KAAK,CAACK,YAAN,CAAmBK,UAAlC,CAApC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BjC,KAAK,CAACwB,QAAN,CAAeJ,KAAK,CAACK,YAAN,CAAmBO,QAAlC,CAAhC;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBnC,KAAK,CAACwB,QAAN,CAAeJ,KAAK,CAACK,YAAN,CAAmBS,MAAlC,CAA5B;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBrC,KAAK,CAACwB,QAAN,CAAeJ,KAAK,CAACK,YAAN,CAAmBW,KAAlC,CAA1B;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBvC,KAAK,CAACwB,QAAN,CAAeJ,KAAK,CAACK,YAAN,CAAmBa,IAAlC,CAAxB;;AAEA,WAASE,WAAT,GAAuB;AACnBtB,IAAAA,EAAE,CAACuB,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BpB,cAA7B,EAA6CqB,MAA7C;AACH;;AAED,WAASC,OAAT,GAAmB;AACf1B,IAAAA,EAAE,CAACuB,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BpB,cAA7B,EAA6CuB,MAA7C,CAAoD;AAChDf,MAAAA,UAAU,EAAE;AADoC,KAApD;AAGAC,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAT,IAAAA,IAAI;AACP;;AAED,WAASyB,SAAT,GAAqB;AACjB5B,IAAAA,EAAE,CAACuB,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BpB,cAA7B,EAA6CuB,MAA7C,CAAoD;AAChDf,MAAAA,UAAU,EAAE;AADoC,KAApD;AAGAC,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH;;AAED,WAASiB,MAAT,GAAkB;AACd7B,IAAAA,EAAE,CAACuB,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BpB,cAA7B,EAA6CuB,MAA7C,CAAoD;AAChDb,MAAAA,QAAQ,EAAE;AADsC,KAApD;AAGAC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,WAASgB,QAAT,GAAoB;AAChB9B,IAAAA,EAAE,CAACuB,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BpB,cAA7B,EAA6CuB,MAA7C,CAAoD;AAChDb,MAAAA,QAAQ,EAAE;AADsC,KAApD;AAGAC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,WAASiB,YAAT,CAAsBC,SAAtB,EAAiC;AAC7BhC,IAAAA,EAAE,CAACuB,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BpB,cAA7B,EAA6CuB,MAA7C,CAAoD;AAChDX,MAAAA,MAAM,EAAEgB;AADwC,KAApD;AAGAf,IAAAA,SAAS,CAACe,SAAD,CAAT;AACH;;AAED,QAAMC,SAAS,GAAI,iCAAgCzB,aAAc,EAAjE;AAEA,QAAM0B,cAAc,GAAE;AAClBC,IAAAA,MAAM,EAAE,iBADU;AAElBC,IAAAA,SAAS,EAAE,QAFO;AAGlBC,IAAAA,MAAM,EAAE,WAHU;AAIlBC,IAAAA,KAAK,EAAE,KAJW;AAKlBC,IAAAA,MAAM,EAAE,MALU;AAMlBC,IAAAA,aAAa,EAAE;AANG,GAAtB;AASA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,YAAY,EAAE;AADG,GAArB;AAIA,sBACI;AAAK,IAAA,KAAK,EAAER,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,MAAM,EAAC,MAA5B;AAAmC,IAAA,GAAG,EAAED,SAAxC;AAAmD,IAAA,WAAW,EAAC,GAA/D;AAAmE,IAAA,KAAK,EAAC,yEAAzE;AAAmJ,IAAA,eAAe,MAAlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAKI;AAAG,IAAA,KAAK,EAAEQ,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBvB,KAAzB,CALJ,eAQI;AAAG,IAAA,KAAK,EAAEuB,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBrB,IAAzB,CARJ,eAWI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACuB,MAAAA,SAAS,EAAE,MAAZ;AAAoBD,MAAAA,YAAY,EAAE;AAAlC,KAAZ;AAAuD,IAAA,SAAS,EAAC,UAAjE;AAA4E,IAAA,EAAE,EAAE,CAAhF;AAAmF,IAAA,WAAW,EAAC,aAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AACA,IAAA,IAAI,EAAG,oBAAmBhC,EAAG,EAD7B;AAEA,IAAA,KAAK,EAAEM,MAFP;AAGA,IAAA,QAAQ,EAAE,CAAC4B,KAAD,EAAQZ,SAAR,KAAsB;AAC5BD,MAAAA,YAAY,CAACC,SAAD,CAAZ;AACH,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXJ,eAuBI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,OAAO,EAAEV,WAA1B;AAAuC,IAAA,KAAK,EAAEmB,YAA9C;AAA4D,IAAA,OAAO,EAAC,QAApE;AAA6E,IAAA,IAAI,EAAC,IAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,EA2BM,CAAC7B,UAAD,iBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,OAAO,EAAEc,OAA1B;AAAmC,IAAA,KAAK,EAAEe,YAA1C;AAAwD,IAAA,OAAO,EAAC,WAAhE;AAA4E,IAAA,IAAI,EAAC,IAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA5BR,EAkCM7B,UAAU,iBACR,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,OAAO,EAAEgB,SAA1B;AAAqC,IAAA,KAAK,EAAEa,YAA5C;AAA0D,IAAA,OAAO,EAAC,SAAlE;AAA4E,IAAA,IAAI,EAAC,IAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnCR,EAyCM,CAAC3B,QAAD,iBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,OAAO,EAAEe,MAA1B;AAAkC,IAAA,KAAK,EAAEY,YAAzC;AAAuD,IAAA,OAAO,EAAC,SAA/D;AAAyE,IAAA,IAAI,EAAC,IAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1CR,EAgDM3B,QAAQ,iBACN,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,OAAO,EAAEgB,QAA1B;AAAoC,IAAA,KAAK,EAAEW,YAA3C;AAAyD,IAAA,OAAO,EAAC,SAAjE;AAA2E,IAAA,IAAI,EAAC,IAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjDR,CADJ;AAyDH;;AAED,eAAexC,KAAf","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Button, Navbar, Nav, NavDropdown, Form, FormControl, Brand, Toggle, NavItem } from 'react-bootstrap';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport star from '../images/star.png'\nimport db from '../firebaseConfig';\n\n\n\nfunction Video({props, test}) {\n\n    const [id_on_firebase, setId_on_firebase] = React.useState(props.videoDetails.id_on_firebase);\n    const [id_on_youtube, setId_on_youtube] = React.useState(props.videoDetails.id_on_youtube);\n    const [id, setId] = React.useState(props.videoDetails.id);\n    const [isArchived, setIsArchived] = React.useState(props.videoDetails.isArchived);\n    const [isViewed, setIsViewed] = React.useState(props.videoDetails.isViewed);\n    const [rating, setRating] = React.useState(props.videoDetails.rating);\n    const [title, setTitle] = React.useState(props.videoDetails.title);\n    const [date, setDate] = React.useState(props.videoDetails.date);\n    \n    function deleteVideo() {\n        db.collection('YouTube').doc(id_on_firebase).delete();\n    }\n\n    function archive() {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            isArchived: true\n        });\n        setIsArchived(!isArchived);\n        test()\n    }\n\n    function unArchive() {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            isArchived: false\n        });\n        setIsArchived(!isArchived);\n    }\n\n    function viewed() {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            isViewed: true\n        });\n        setIsViewed(!isViewed);\n    }\n\n    function unViewed() {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            isViewed: false\n        });\n        setIsViewed(!isViewed);\n    }\n\n    function updateRating(newRating) {\n        db.collection(\"YouTube\").doc(id_on_firebase).update({\n            rating: newRating\n        });\n        setRating(newRating);\n    }\n\n    const iframeSRC = `https://www.youtube.com/embed/${id_on_youtube}`\n\n    const videoContainer= {\n        border: '1px solid black',\n        textAlign: 'center',\n        margin: '20px 10px',\n        width: '25%',\n        height: 'auto',\n        paddingBottom: '8px'\n    }\n\n    const elementStyle = {\n        marginBottom: '-4px'\n    }\n\n    return (\n        <div style={videoContainer}>\n            {/* Setting video frame */}\n            <iframe width=\"100%\" height=\"auto\" src={iframeSRC} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            \n            {/* Displaying video title */}\n            <p style={elementStyle}>{title}</p>\n            \n            {/* Displaying date of video adding */}\n            <p style={elementStyle}>{date}</p>\n\n            {/* Displaying video rating with the ability to update the value */}\n            <Box style={{marginTop: '10px', marginBottom: '-8px'}} component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                <Typography component=\"legend\"></Typography>\n                <Rating\n                name={`simple-controlled${id}`}\n                value={rating}\n                onChange={(event, newRating) => {\n                    updateRating(newRating);\n                }}\n                />\n            </Box>\n\n            {/* Creating a button to delete the video */}\n            <Button id=\"btn\" onClick={deleteVideo} style={elementStyle} variant=\"danger\" size=\"sm\">Delete</Button>\n            \n            {/* Creating a button to set the video as archived */}\n            {\n              !isArchived && (\n                <Button id=\"btn\" onClick={archive} style={elementStyle} variant=\"secondary\" size=\"sm\">Archive</Button>\n              )\n            }\n\n            {/* Creating a button to set the video as archived */}\n            {\n              isArchived && (\n                <Button id=\"btn\" onClick={unArchive} style={elementStyle} variant=\"primary\" size=\"sm\">Unarchive</Button>\n              )\n            }\n            \n            {/* Creating a button to set the video as viewed */}\n            {\n              !isViewed && (\n                <Button id=\"btn\" onClick={viewed} style={elementStyle} variant=\"success\" size=\"sm\">Set as Viewd</Button>\n              )\n            }\n\n            {/* Creating a button to set the video as unviewed */}\n            {\n              isViewed && (\n                <Button id=\"btn\" onClick={unViewed} style={elementStyle} variant=\"warning\" size=\"sm\">Set as Unviewd</Button>\n              )\n            }\n            \n        </div>\n        \n    );\n}\n\nexport default Video;\n\n"]},"metadata":{},"sourceType":"module"}